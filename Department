from orm_base import Base
from sqlalchemy import Column, Integer, UniqueConstraint, Identity
from sqlalchemy import String
from sqlalchemy.orm import Mapped, mapped_column

class Department(Base):
  __tablename__ = "departments" #give name of the table for SQL alchemy
  departmentId: Mapped[Int] = mapped_column(__name_pos: 'department_id', Integer, Identity(start=1, cycle=True), nullable=False, primary_key=True)
  name: Mapped[str] = mapped_column('name', String(50), nullable=False)
  abbreviation: Mapped[str] = mapped_column('abbreviation', String(6), nullable=False)
  chair_name: Mapped[str] = mapped_column('chair_name', String(80), nullable=False)
  building: Mapped[str] = mapped_column('building', String(10), nullable=False)
  office: Mapped[str] = mapped_column('office', Int, nullable=False)
  description: Mapped[str] = mapped_column('description', String(80), nullable=False)

  def __init__(self, name: str, abbreviation: str, chair_name: str, building: str, office: Int, description: str)
  self.name = name
  self.abbreviation = abbreviation
  self.chair_name = chair_name
  self.building = building
  self.office = office
  self.description = description

  def __str__(self):
    return f"Department id: {self.departmentId} \nname: {self.name}\nAbbreviation: {self.abbreviation} \nChair: {self.chair_name}\nBuilding: {self.building}\nOffice: {self.office}\nDescription: {self.description}

